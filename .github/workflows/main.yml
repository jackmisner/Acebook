# The name of the workflow
name: Build and Test

# This workflow will run on any push to the repository
on: push

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install NVM (macOS)
        run: |
          brew install nvm
          mkdir -p ~/.nvm
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

      - name: Load NVM
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" || echo "nvm.sh not found"
          echo "NVM_DIR=$NVM_DIR" >> $GITHUB_ENV

      - name: Verify NVM Installation
        run: |
          source $NVM_DIR/nvm.sh
          nvm --version

      - name: Install Dependencies
        run: |
          source $NVM_DIR/nvm.sh
          nvm install 20
          nvm use 20
          cd frontend
          npm install
          cd ../api
          npm install

      - name: Install MongoDB (macOS)
        run: |
          brew tap mongodb/brew
          brew install mongodb-community@6.0

      - name: Start MongoDB Service (macOS)
        run: |
          brew services start mongodb/brew/mongodb-community@6.0

      - name: Run Backend Tests with Coverage and Threshold
        run: |
          # Run Jest with coverage enabled and thresholds set via jest.config.js
          cd api
          npx jest --coverage --coverageThreshold='{"global":{"branches":40,"functions":30,"lines":60,"statements":55}}'

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm run coverage

      - name: Check Coverage Thresholds
        run: |
          coverage_file="frontend/coverage/coverage-final.json"
          threshold_lines=0
          threshold_statements=0
          threshold_branches=0
          threshold_functions=0

          # Extract coverage metrics
          lines_coverage=$(jq '.total.lines.pct' < "$coverage_file")
          statements_coverage=$(jq '.total.statements.pct' < "$coverage_file")
          branches_coverage=$(jq '.total.branches.pct' < "$coverage_file")
          functions_coverage=$(jq '.total.functions.pct' < "$coverage_file")

          # Compare with thresholds and fail if not met
          if (( $(echo "$lines_coverage < $threshold_lines" | bc -l) )); then
            echo "Error: Lines coverage is below threshold ($lines_coverage%)"
            exit 1
          fi

          if (( $(echo "$statements_coverage < $threshold_statements" | bc -l) )); then
            echo "Error: Statements coverage is below threshold ($statements_coverage%)"
            exit 1
          fi

          if (( $(echo "$branches_coverage < $threshold_branches" | bc -l) )); then
            echo "Error: Branches coverage is below threshold ($branches_coverage%)"
            exit 1
          fi

          if (( $(echo "$functions_coverage < $threshold_functions" | bc -l) )); then
            echo "Error: Functions coverage is below threshold ($functions_coverage%)"
            exit 1
          fi
